// Generated by Haxe 4.3.1
var $global = typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this;
var Main_modelElement = null;
function Main_main() {
	let assetItems = Main_document.getElementsByClassName("model");
	let _g = [];
	let _g1 = 0;
	while(_g1 < assetItems.length) {
		let element = assetItems[_g1];
		++_g1;
		_g.push("#" + element.id);
	}
	Main_assetIds = _g;
	let _g2 = [];
	let _g3 = 0;
	while(_g3 < assetItems.length) {
		let element = assetItems[_g3];
		++_g3;
		_g2.push(element.dataset.label);
	}
	Main_assetLabels = _g2;
	let _g4 = [];
	let _g5 = 0;
	while(_g5 < assetItems.length) {
		let element = assetItems[_g5];
		++_g5;
		_g4.push(element.dataset.price);
	}
	Main_assetPrices = _g4;
	let _g6 = [];
	let _g7 = 0;
	while(_g7 < assetItems.length) {
		let element = assetItems[_g7];
		++_g7;
		_g6.push(element.dataset.shoplink);
	}
	Main_assetShopLinks = _g6;
	AFRAME.registerComponent("switch_model",{ init : function() {
		Main_modelElement = Main_document.getElementById("model");
		Main_document.getElementById("prev").addEventListener("click",Main_onPrevClick);
		Main_document.getElementById("next").addEventListener("click",Main_onNextClick);
		Main_updateModel();
	}});
}
function Main_onNextClick(e) {
	Main_currentAssetId = (Main_currentAssetId + 1) % Main_assetIds.length;
	Main_updateModel();
}
function Main_onPrevClick(e) {
	Main_currentAssetId = (Main_assetIds.length + Main_currentAssetId - 1) % Main_assetIds.length;
	Main_updateModel();
}
function Main_updateModel() {
	Main_modelElement.removeAttribute("gltf-model");
	Main_modelElement.setAttribute("gltf-model",Main_assetIds[Main_currentAssetId]);
	Main_document.getElementById("label").textContent = Main_assetLabels[Main_currentAssetId];
	Main_document.getElementById("price").textContent = Main_assetPrices[Main_currentAssetId];
	Main_document.getElementById("shop_link").setAttribute("href",Main_assetShopLinks[Main_currentAssetId]);
}
class haxe_iterators_ArrayIterator {
	constructor(array) {
		this.current = 0;
		this.array = array;
	}
	hasNext() {
		return this.current < this.array.length;
	}
	next() {
		return this.array[this.current++];
	}
}
{
}
var Main_document = window.document;
var Main_assetIds = [];
var Main_assetLabels = [];
var Main_assetPrices = [];
var Main_assetShopLinks = [];
var Main_currentAssetId = 0;
Main_main();

//# sourceMappingURL=app.js.map